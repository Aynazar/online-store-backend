// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String     @id @default(uuid())
  email      String     @unique
  fullName   String     @map("full_name")
  password   String
  roles      Role[]
  products   Product[]
  categories Category[]
  Token      Token[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("users")
}

model Token {
  token     String   @unique
  exp       DateTime
  User      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  userAgent String   @map("user_agent")

  @@map("tokens")
}

model Product {
  id          String   @id @default(uuid())
  title       String   @db.VarChar(255)
  description String   @db.VarChar(357)
  price       Int
  type        String?
  brand       String?
  screen      String?
  screenSize  String? @map("screen_size")
  color      String?
  frame       String?

  images      String[]

  categoryId String
  category   Category? @relation(fields: [categoryId], references: [id], onDelete: Cascade)

  userId    String
  User      User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  @@map("products")
}

model Category {
  id          String   @id @default(uuid())
  title       String   @db.VarChar(255)
  description String   @db.VarChar(357)
  brand       String
  receipt     Boolean @default(true)
  images      String[]
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @default(now()) @updatedAt @map("updated_at")

  products Product[]

  userId String
  User   User   @relation(fields: [userId], references: [id], onUpdate: Cascade, onDelete: Cascade)
}

enum Role {
  ADMIN
  USER
}
